name: Build and publish Python wheels for musl/Linux

on:
  push:
    branches:
      - release

jobs:
  build-wheels:
    name: Build wheels on Alpine
    runs-on: ubuntu-latest
    services:
      alpine:
        image: alpine:latest
        options: --volume /__w:/__w --workdir /__w

    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - name: 签出rust代码
        uses: actions/checkout@v2

      - name: 签出前端
        uses: actions/checkout@v2
        with:
          repository: GiantAxeWhy/atomic-bomb-engine-front
          path: vue-project

      - name: 在Docker中设置Python环境
        run: |
          docker exec alpine apk add --no-cache python3-dev py3-pip build-base
          docker exec alpine ln -s /usr/bin/python3 /usr/bin/python
          docker exec alpine python -m ensurepip
          docker exec alpine pip install --upgrade pip setuptools wheel

      - name: 在Docker中安装Node.js
        run: |
          docker exec alpine apk add --no-cache nodejs npm
          docker exec alpine node --version
          docker exec alpine npm --version

      - name: 在Docker中构建前端
        run: |
          docker exec alpine sh -c "cd vue-project && npm install && npm run build"

      - name: 删除现有的dist目录
        run: docker exec alpine rm -rf python/atomic_bomb_engine/dist/*

      - name: 将dist复制到Python项目
        run: docker exec alpine cp -r vue-project/dist/* python/atomic_bomb_engine/dist/

      - name: 在Docker中安装Rust和maturin
        run: |
          docker exec alpine sh -c "apk add rust cargo && pip install maturin"

      - name: 在Docker中使用maturin构建代码
        run: |
          docker exec alpine sh -c "cd python/atomic_bomb_engine && maturin build --release --interpreter python"

      - name: 安装Twine并上传
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          docker exec alpine pip install twine
          docker exec alpine twine upload --skip-existing --repository-url https://upload.pypi.org/legacy/ target/wheels/*.whl
