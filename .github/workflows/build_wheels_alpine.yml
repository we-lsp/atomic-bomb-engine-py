name: Build and publish Python wheels for musl/Linux

on:
  push:
    branches:
      - release

jobs:
  build-wheels:
    name: Build wheels on Alpine
    runs-on: ubuntu-latest

    steps:
      - name: 签出rust代码
        uses: actions/checkout@v2

      - name: 签出前端
        uses: actions/checkout@v2
        with:
          repository: GiantAxeWhy/atomic-bomb-engine-front
          path: vue-project

      - name: 启动Alpine容器
        run: |
          docker run --name alpine-container -d -v "${{ github.workspace }}:/__w" -w "/__w" alpine:latest sleep 3600

      - name: 设置Python环境
        run: |
          docker exec alpine-container apk add --no-cache python3-dev py3-pip build-base
          docker exec alpine-container sh -c "[ ! -e /usr/bin/python ] && ln -s /usr/bin/python3 /usr/bin/python || echo 'Link already exists'"
          docker exec alpine-container python -m ensurepip
          docker exec alpine-container pip install --upgrade pip setuptools wheel

      - name: 安装Node.js
        run: |
          docker exec alpine-container apk add --no-cache nodejs npm
          docker exec alpine-container node --version
          docker exec alpine-container npm --version

      - name: 构建前端
        run: |
          docker exec alpine-container sh -c "cd vue-project && npm install && npm run build"

      - name: 删除现有的dist目录
        run: docker exec alpine-container rm -rf python/atomic_bomb_engine/dist/*

      - name: 将dist复制到Python项目
        run: docker exec alpine-container cp -r vue-project/dist/* python/atomic_bomb_engine/dist/

      - name: 安装Rust和maturin
        run: |
          docker exec alpine-container sh -c "apk add rust cargo && pip install maturin"

      - name: 使用maturin构建代码
        run: |
          docker exec alpine-container sh -c "cd python/atomic_bomb_engine && maturin build --release --interpreter python"

      - name: 安装Twine并上传
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          docker exec alpine-container pip install twine
          docker exec alpine-container twine upload --skip-existing --repository-url https://upload.pypi.org/legacy/ target/wheels/*.whl
